@page "/"
@using System.Text.Json
@using Fluxor
@using mark.davison.common.client.abstractions.Repository
@using mark.davison.edinburgh.shared.models.dto.Scenarios.Commands.Example
@using mark.davison.edinburgh.web.features.Store.StartupUseCase
@inject IAuthenticationContext _authContext
@inherits FluxorComponent

<h1>Hello, world!</h1>
<p>IsAuthenticated: <span>@_authContext.IsAuthenticated</span></p>
<p>@JsonSerializer.Serialize(_authContext.User)</p>
<br />
<MudButton ButtonType="ButtonType.Submit"
           Color="Color.Primary"
           Variant="Variant.Filled"
           Size="Size.Large"
           Disabled="false"
           IconSize="Size.Large"
           OnClick="@OnExample">Click</MudButton>
<p>@_exampleResponse</p>
<br />
<h3>Projects</h3>
<ul>
    @foreach (var project in StartupState.Value.ProjectNames)
    {
        <li>@project</li>
    }
</ul>

@code {
    private string _exampleResponse = string.Empty;

    [Inject]
    public required IState<StartupState> StartupState { get; set; }

    [Inject]
    public required IClientHttpRepository ClientHttpRepository { get; set; }

    private async Task OnExample()
    {
        var response = await ClientHttpRepository.Post<ExampleCommandResponse, ExampleCommandRequest>(
            new ExampleCommandRequest
            {
                Value = "From the client"
            },
            CancellationToken.None);
        _exampleResponse = response.Success ? response.ResponseValue : "FAILURE";
    }
}